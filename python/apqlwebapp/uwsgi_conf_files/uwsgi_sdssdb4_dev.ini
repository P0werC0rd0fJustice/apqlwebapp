# -----------------------------------------------
# Configuration file for launching app with uWSGI
# -----------------------------------------------

# Each group contains parameters sent to uWSGI.
# When launched without any options, the group "uwsgi" is used:
#
# % uwsgi uwsgi.ini
#
# This is equivalent to as the program interprets the ".ini" extension.
#
# % uwsgi --ini uwsgi
#
# To launch with the other groups:
#
# % uwsgi --ini uwsgi.ini:apqlwebapp_dev
#
# Ref: http://projects.unbit.it/uwsgi/wiki/INIFiles

[uwsgi]
base = /home/sdss4/products/Linux64/
home = %(base)/apqlwebapp/dev/python/

socket = /tmp/uwsgi_apqlwebapp-dev.sock
chmod-socket = 666
master = true
sharedarea = 4
memory-report = true
daemonize = /var/www/apqlwebapp/dev/uwsgi_apqlwebapp.log
pidfile = /var/www/apqlwebapp/dev/uwsgi_apqlwebapp.pid
file = %(home)/apqlwebapp/run_apqlwebapp.py
callable = app
module = apqlwebapp

# NOTE: jkp: note that this pythonpath should be dymanically created, and sent
# to uwsgi via the --pythonpath commandline directive. That way, we can fill it
# with the correct values post "module load".

pythonpath = %(home):%(home)/sdss_python_module/current

# This key/value will be read in the Flask application
# to indicate which server the application is running on.
# Don't add more server-specific options here; place them
# in the apqlwebapp/server_config_files files.
flask-config-file = sdss-db4.local.cfg
